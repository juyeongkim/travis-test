# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - name: Install aspera
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            wget https://download.asperasoft.com/download/sw/cli/3.9.1/ibm-aspera-cli-3.9.1.1401.be67d47-linux-64-release.sh -P ~/
            chmod +x ~/ibm-aspera-cli-3.9.1.1401.be67d47-linux-64-release.sh
            ~/ibm-aspera-cli-3.9.1.1401.be67d47-linux-64-release.sh
          elif [ "$RUNNER_OS" == "macOS" ]; then
            wget https://download.asperasoft.com/download/sw/cli/3.9.1/ibm-aspera-cli-3.9.1.1401.be67d47-mac-10.7-64-release.sh -P ~/
            chmod +x ~/ibm-aspera-cli-3.9.1.1401.be67d47-mac-10.7-64-release.sh
            ~/ibm-aspera-cli-3.9.1.1401.be67d47-mac-10.7-64-release.sh
          elif [ "$RUNNER_OS" == "Windows" ]; then
            mkdir /c/aspera
            curl --insecure https://download.asperasoft.com/download/sw/cli/3.9.1/ibm-aspera-cli-3.9.1.1401.be67d47-win-v140_xp-32-release.zip --output /c/aspera/ibm-aspera-cli-3.9.1.1401.be67d47-win-v140_xp-32-release.zip
            unzip /c/aspera/ibm-aspera-cli-3.9.1.1401.be67d47-win-v140_xp-32-release.zip -d /c/aspera
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
        shell: bash

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_github("RGLab/ImmPortR")
        shell: Rscript {0}

      - name: Test ImmPortR
        env:
          ImmPortUsername: ${{ secrets.IMMPORTUSERNAME }}
          ImmPortPassword: ${{ secrets.IMMPORTPASSWORD }}
        run: |
          library(ImmPortR)
          list_immport("/SDY1/StudyFiles")
          download_immport(path = "/SDY1/StudyFiles/Casale_Study_Summary_Report.doc", output_dir = tempdir())
        shell: Rscript {0}
    
      - name: Print
        run: |
          echo $GITHUB_RUN_ID
          echo $GITHUB_RUN_NUMBER
          echo $GITHUB_ACTION
          echo $GITHUB_SHA
          echo $GITHUB_REF
          success()
          echo success()
